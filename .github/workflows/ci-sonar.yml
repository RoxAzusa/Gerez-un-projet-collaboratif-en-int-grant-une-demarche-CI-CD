name: CI - Sonar Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  sonar-frontend:
    name: SonarCloud Frontend Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run Angular tests with coverage
        run: npm run test -- --watch=false --code-coverage --no-progress --browsers=ChromeHeadless

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  sonar-backend:
    name: SonarCloud Backend Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=projet-10-back
